{"version":3,"sources":["App.js","localStorage.js","index.js"],"names":["App","useState","isCircle","setIsCircle","circle","cross","score","setScore","board","setBoard","useEffect","localStorage","getItem","data","setData","JSON","parse","localStorageGet","setItem","stringify","afterWin","i","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setTimeout","changeBoard","index","temp","error","onClickReset","item","getIcon","size","color","style","padding","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"wPAkReA,EAxQH,WAAO,IAAD,EACgBC,oBAAS,GADzB,mBACTC,EADS,KACCC,EADD,OAEUF,mBAAS,CACjCG,OAAQ,EACRC,MAAO,IAJO,mBAETC,EAFS,KAEFC,EAFE,KAMRH,EAAkBE,EAAlBF,OAAQC,EAAUC,EAAVD,MANA,EAOUJ,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAP5C,mBAOTO,EAPS,KAOFC,EAPE,KAShBC,qBAAU,WACR,GAAIC,aAAaC,QAAQ,aAAc,CACrC,IAAIC,ECjBqB,WAC7B,IAAIC,EAAU,CACZZ,UAAU,EACVM,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCF,MAAO,CACLF,OAAQ,EACRC,MAAO,IAMX,OAHIM,aAAaC,QAAQ,eACvBE,EAAUC,KAAKC,MAAML,aAAaC,QAAQ,eAErCE,EDKQG,GACXR,EAASI,EAAKL,OACdL,EAAYU,EAAKX,UACjBK,EAASM,EAAKP,UAEf,IACHI,qBAAU,WC3BmB,IAACG,ID4BZ,CAAEX,WAAUM,QAAOF,SC3BrCK,aAAaO,QAAQ,YAAaH,KAAKI,UAAUN,MD4B9C,CAACX,EAAUM,EAAOF,IAErB,IAAMc,EAAW,SAACC,GACC,IAAbb,EAAMa,IACRC,IAAMC,QAAQ,SAAU,CACtBC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZC,YAAW,WACTvB,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAClCF,EAAS,2BAAKD,GAAN,IAAaF,OAAQA,EAAS,KACtCD,GAAY,KACX,OAEHmB,IAAMC,QAAQ,SAAU,CACtBC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZC,YAAW,WACTvB,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAClCF,EAAS,2BAAKD,GAAN,IAAaD,MAAOA,EAAQ,KAEpCF,GAAY,KACX,OAyED8B,EAAc,SAACC,GACnB,GAAqB,IAAjB1B,EAAM0B,GAAc,CACtB,IAAIC,EAAO3B,EACX2B,EAAKD,GAAShC,EAAW,EAAI,EAC7BO,EAAS0B,GACThC,GAAaD,QAEQ,IAAjBM,EAAM0B,GACRZ,IAAMc,MAAM,qBAAsB,CAChCZ,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEc,IAAjBvB,EAAM0B,IACfZ,IAAMc,MAAM,qBAAsB,CAChCZ,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IA9FZvB,EAAM,KAAOA,EAAM,IAAMA,EAAM,KAAOA,EAAM,IAAmB,IAAbA,EAAM,GAC1DY,EAAS,GAETZ,EAAM,KAAOA,EAAM,IACnBA,EAAM,KAAOA,EAAM,IACN,IAAbA,EAAM,GAENY,EAAS,GAETZ,EAAM,KAAOA,EAAM,IACnBA,EAAM,KAAOA,EAAM,IACN,IAAbA,EAAM,GAENY,EAAS,GAETZ,EAAM,KAAOA,EAAM,IACnBA,EAAM,KAAOA,EAAM,IACN,IAAbA,EAAM,GAENY,EAAS,GAETZ,EAAM,KAAOA,EAAM,IACnBA,EAAM,KAAOA,EAAM,IACN,IAAbA,EAAM,GAENY,EAAS,GAETZ,EAAM,KAAOA,EAAM,IACnBA,EAAM,KAAOA,EAAM,IACN,IAAbA,EAAM,GAENY,EAAS,GAETZ,EAAM,KAAOA,EAAM,IACnBA,EAAM,KAAOA,EAAM,IACN,IAAbA,EAAM,GAENY,EAAS,GAETZ,EAAM,KAAOA,EAAM,IACnBA,EAAM,KAAOA,EAAM,IACN,IAAbA,EAAM,GAENY,EAAS,GAETZ,EAAM,GAAK,GACXA,EAAM,GAAK,GACXA,EAAM,GAAK,GACXA,EAAM,GAAK,GACXA,EAAM,GAAK,GACXA,EAAM,GAAK,GACXA,EAAM,GAAK,GACXA,EAAM,GAAK,GACXA,EAAM,GAAK,IAEXc,IAAMC,QAAQ,cAAe,CAC3BC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZC,YAAW,WACTvB,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MACjC,OAmCD4B,EAAe,SAACC,GACP,UAATA,EACF7B,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAElCF,EAAS,CACPH,OAAQ,EACRC,MAAO,KAIPkC,EAAU,SAAClB,GACf,OAAiB,IAAbb,EAAMa,GACD,cAAC,IAAD,CAASmB,KAAK,KAAKC,MAAM,MAAMC,MAAO,CAAEC,QAAS,UAClC,IAAbnC,EAAMa,GACR,cAAC,IAAD,CAAUoB,MAAM,SAASD,KAAK,KAAKE,MAAO,CAAEC,QAAS,UAErD,cAAC,IAAD,CAASF,MAAM,QAAQD,KAAK,KAAKE,MAAO,CAAEC,QAAS,WAI9D,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,yBACA,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,SAAf,SACE,+BACG1C,EACC,cAAC,IAAD,CAAUuC,MAAM,SAASD,KAAK,OAE9B,cAAC,IAAD,CAASC,MAAM,QAAQD,KAAK,OAC3B,IALL,wBA4BJ,sBAAKI,UAAU,QAAf,UACE,qBAAKC,QAAS,kBAAMZ,EAAY,IAAIW,UAAU,gBAA9C,SACGL,EAAQ,KAEX,qBAAKM,QAAS,kBAAMZ,EAAY,IAAIW,UAAU,eAA9C,SACGL,EAAQ,KAEX,qBAAKM,QAAS,kBAAMZ,EAAY,IAAIW,UAAU,eAA9C,SACGL,EAAQ,KAEX,qBAAKM,QAAS,kBAAMZ,EAAY,IAAIW,UAAU,eAA9C,SACGL,EAAQ,KAEX,qBAAKM,QAAS,kBAAMZ,EAAY,IAAIW,UAAU,cAA9C,SACGL,EAAQ,KAEX,qBAAKM,QAAS,kBAAMZ,EAAY,IAAIW,UAAU,cAA9C,SACGL,EAAQ,KAEX,qBAAKM,QAAS,kBAAMZ,EAAY,IAAIW,UAAU,eAA9C,SACGL,EAAQ,KAEX,qBAAKM,QAAS,kBAAMZ,EAAY,IAAIW,UAAU,cAA9C,SACGL,EAAQ,KAEX,qBAAKM,QAAS,kBAAMZ,EAAY,IAAIW,UAAU,cAA9C,SACGL,EAAQ,QAGb,qBAAKK,UAAU,SAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,SAAd,yBACA,qBAAIA,UAAU,QAAd,UACE,cAAC,IAAD,CAASH,MAAM,QAAQD,KAAK,OAC5B,uBAAMI,UAAU,WAAhB,cAA6BvC,QAE/B,+BACE,cAAC,IAAD,CAAUoC,MAAM,SAASD,KAAK,OAC9B,uBAAMI,UAAU,WAAhB,cAA6BxC,QAE/B,wBAAQyC,QAAS,kBAAMR,EAAa,UAAUO,UAAU,MAAxD,yBAGA,wBAAQC,QAAS,kBAAMR,EAAa,UAAUO,UAAU,MAAxD,8BAMJ,cAAC,IAAD,QEzQNE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.faeb237b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { ImCross } from \"react-icons/im\";\nimport { BiCircle } from \"react-icons/bi\";\nimport { FiEdit2 } from \"react-icons/fi\";\nimport { localStorageGet, localStorageSet } from \"./localStorage\";\n\nconst App = () => {\n  const [isCircle, setIsCircle] = useState(false);\n  const [score, setScore] = useState({\n    circle: 0,\n    cross: 0,\n  });\n  const { circle, cross } = score;\n  const [board, setBoard] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"tictactoe\")) {\n      let data = localStorageGet();\n      setBoard(data.board);\n      setIsCircle(data.isCircle);\n      setScore(data.score);\n    }\n  }, []);\n  useEffect(() => {\n    localStorageSet({ isCircle, board, score });\n  }, [isCircle, board, score]);\n\n  const afterWin = (i) => {\n    if (board[i] === 1) {\n      toast.success(\"O Win!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined,\n      });\n      setTimeout(() => {\n        setBoard([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n        setScore({ ...score, circle: circle + 1 });\n        setIsCircle(true);\n      }, 1000);\n    } else {\n      toast.success(\"X Win!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined,\n      });\n      setTimeout(() => {\n        setBoard([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n        setScore({ ...score, cross: cross + 1 });\n\n        setIsCircle(false);\n      }, 1000);\n    }\n  };\n  const checkWin = () => {\n    if (board[0] === board[1] && board[1] === board[2] && board[0] !== 0) {\n      afterWin(0);\n    } else if (\n      board[3] === board[4] &&\n      board[4] === board[5] &&\n      board[3] !== 0\n    ) {\n      afterWin(3);\n    } else if (\n      board[6] === board[7] &&\n      board[7] === board[8] &&\n      board[6] !== 0\n    ) {\n      afterWin(6);\n    } else if (\n      board[0] === board[3] &&\n      board[3] === board[6] &&\n      board[0] !== 0\n    ) {\n      afterWin(7);\n    } else if (\n      board[1] === board[4] &&\n      board[4] === board[7] &&\n      board[1] !== 0\n    ) {\n      afterWin(1);\n    } else if (\n      board[2] === board[5] &&\n      board[5] === board[8] &&\n      board[2] !== 0\n    ) {\n      afterWin(2);\n    } else if (\n      board[0] === board[4] &&\n      board[4] === board[8] &&\n      board[0] !== 0\n    ) {\n      afterWin(0);\n    } else if (\n      board[2] === board[4] &&\n      board[4] === board[6] &&\n      board[2] !== 0\n    ) {\n      afterWin(2);\n    } else if (\n      board[0] > 0 &&\n      board[1] > 0 &&\n      board[2] > 0 &&\n      board[3] > 0 &&\n      board[4] > 0 &&\n      board[5] > 0 &&\n      board[6] > 0 &&\n      board[7] > 0 &&\n      board[8] > 0\n    ) {\n      toast.success(\"No one Won!\", {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        progress: undefined,\n      });\n      setTimeout(() => {\n        setBoard([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n      }, 1000);\n    }\n  };\n  const changeBoard = (index) => {\n    if (board[index] === 0) {\n      let temp = board;\n      temp[index] = isCircle ? 1 : 2;\n      setBoard(temp);\n      setIsCircle(!isCircle);\n    } else {\n      if (board[index] === 1) {\n        toast.error(\"O is already there\", {\n          position: \"bottom-center\",\n          autoClose: 1000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: false,\n          progress: undefined,\n        });\n      } else if (board[index] === 2) {\n        toast.error(\"X is already there\", {\n          position: \"bottom-center\",\n          autoClose: 1000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: false,\n          progress: undefined,\n        });\n      }\n    }\n    checkWin();\n  };\n\n  const onClickReset = (item) => {\n    if (item === \"board\") {\n      setBoard([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    } else {\n      setScore({\n        circle: 0,\n        cross: 0,\n      });\n    }\n  };\n  const getIcon = (i) => {\n    if (board[i] === 0) {\n      return <FiEdit2 size=\"50\" color=\"red\" style={{ padding: \"20px\" }} />;\n    } else if (board[i] === 1) {\n      return <BiCircle color=\"yellow\" size=\"50\" style={{ padding: \"20px\" }} />;\n    } else {\n      return <ImCross color=\"green\" size=\"50\" style={{ padding: \"20px\" }} />;\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"headTitle\">Tic Tac Toe</h1>\n      <div className=\"header\">\n        <div className=\"symbol\">\n          <h1>\n            {isCircle ? (\n              <BiCircle color=\"yellow\" size=\"30\" />\n            ) : (\n              <ImCross color=\"green\" size=\"30\" />\n            )}{\" \"}\n            it's your turn\n          </h1>\n        </div>\n\n        {/* <div className=\"scoreBoard\">\n          <h1 className=\"stitle\">Score Board</h1>\n          <h2 className=\"score\">\n            <ImCross color=\"green\" size=\"30\" />\n            <span className=\"scoreNum\">:{cross}</span>\n          </h2>\n          <h2>\n            <BiCircle color=\"yellow\" size=\"30\" />\n            <span className=\"scoreNum\">:{circle}</span>\n          </h2>\n          <button onClick={() => onClickReset(\"board\")} className=\"btn\">\n            Reset Board\n          </button>\n          <button onClick={() => onClickReset(\"score\")} className=\"btn\">\n            Reset Score\n          </button>\n        </div> */}\n      </div>\n      <div className=\"board\">\n        <div onClick={() => changeBoard(0)} className=\"box zero-zero\">\n          {getIcon(0)}\n        </div>\n        <div onClick={() => changeBoard(1)} className=\"box zero-one\">\n          {getIcon(1)}\n        </div>\n        <div onClick={() => changeBoard(2)} className=\"box zero-two\">\n          {getIcon(2)}\n        </div>\n        <div onClick={() => changeBoard(3)} className=\"box one-zero\">\n          {getIcon(3)}\n        </div>\n        <div onClick={() => changeBoard(4)} className=\"box one-one\">\n          {getIcon(4)}\n        </div>\n        <div onClick={() => changeBoard(5)} className=\"box one-two\">\n          {getIcon(5)}\n        </div>\n        <div onClick={() => changeBoard(6)} className=\"box two-zero\">\n          {getIcon(6)}\n        </div>\n        <div onClick={() => changeBoard(7)} className=\"box two-one\">\n          {getIcon(7)}\n        </div>\n        <div onClick={() => changeBoard(8)} className=\"box two-two\">\n          {getIcon(8)}\n        </div>\n      </div>\n      <div className=\"header\">\n        <div className=\"scoreBoard\">\n          <h1 className=\"stitle\">Score Board</h1>\n          <h2 className=\"score\">\n            <ImCross color=\"green\" size=\"30\" />\n            <span className=\"scoreNum\">:{cross}</span>\n          </h2>\n          <h2>\n            <BiCircle color=\"yellow\" size=\"30\" />\n            <span className=\"scoreNum\">:{circle}</span>\n          </h2>\n          <button onClick={() => onClickReset(\"board\")} className=\"btn\">\n            Reset Board\n          </button>\n          <button onClick={() => onClickReset(\"score\")} className=\"btn\">\n            Reset Score\n          </button>\n        </div>\n      </div>\n\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default App;\n","export const localStorageSet = (data) => {\n  localStorage.setItem(\"tictactoe\", JSON.stringify(data));\n};\n\nexport const localStorageGet = () => {\n  let setData = {\n    isCircle: false,\n    board: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    score: {\n      circle: 0,\n      cross: 0,\n    },\n  };\n  if (localStorage.getItem(\"tictactoe\")) {\n    setData = JSON.parse(localStorage.getItem(\"tictactoe\"));\n  }\n  return setData;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}